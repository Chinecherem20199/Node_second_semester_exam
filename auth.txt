const request = require('supertest')
const {connect} = require('../db')
const UserSchema = require('../models/user_schema')
const app = require('../app')

describe("Auth: Signup", () => {
  let conn;

  beforeAll(async () => {
    conn = await connect();
  });

  afterEach(async () => {
    await conn.cleanup();
  });

  afterAll(async () => {
    await conn.disconnect();
  });

  it("should signup a user", async () => {
    const response = await request(app)
      .post("/signup")
      .set("content-type", "application/json")
      .send({
        email:"Chinecherem@gmail.com",
        password: "123456",
        firstname: "Chichi",
        lastname: "Tina",
      });

    expect(response.status).toBe(201);
    expect(response.body).toHaveProperty("message");
    expect(response.body).toHaveProperty("user");
    expect(response.body.user).toHaveProperty("email", "Chinecherem@gmail.com");
    expect(response.body.user).toHaveProperty("firstname", "Chichi");
    expect(response.body.user).toHaveProperty("lastname", "Tina");
    // expect(response.body.user).toHaveProperty("email", "tobi@mail.com");
  });

  it("should login a user", async () => {
    // create user in out db
    const user = await UserSchema.create({
      email: "Chinecherem@gmail.com",
      password: "123456",
    });

    // login user
    const response = await request(app)
      .post("/login")
      .set("content-type", "application/json")
      .send({
        email: "Chinecherem@gmail.com",
        password: "123456",
      });

    expect(response.status).toBe(200);
    expect(response.body).toHaveProperty("token");
  });
});



 "title": "Native HTTP servers in Node.js",
 "description": "Native HTTP servers in Node.js, Deno, and Bun",